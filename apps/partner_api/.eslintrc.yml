env:
  es2021: true
  node: true
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:prettier/recommended
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: latest
  sourceType: module
  project: './tsconfig.json'
plugins:
  - '@typescript-eslint'
rules:
  semi: ['error', 'always']
  quotes: ['error', 'single']
  indent: ['error', 2]
  no-unused-vars: 'warn'
  no-console: 'off'
  curly: 'error'
  eqeqeq: ['error', 'always']
  no-throw-literal: 'error'
  strict: ['error', 'never']
  max-params: ['error', 4]
  complexity: ['error', { 'max': 10 }]
  max-depth: ['error', 4]
  max-nested-callbacks: ['error', 3]
  max-statements: ['error', 15]
  max-len: ['error', { 'code': 100 }]
  no-magic-numbers: 'off'
  'prettier/prettier': 'error'
  '@typescript-eslint/no-unused-vars': 'warn'
  '@typescript-eslint/type-annotation-spacing': 'error'
  '@typescript-eslint/no-explicit-any': 'error'
  '@typescript-eslint/no-non-null-assertion': 'error'
  no-implicit-globals: 'error'
  prefer-promise-reject-errors: 'error'
  no-await-in-loop: 'error'
  no-duplicate-imports: 'error'
  no-use-before-define: 'error'
  '@typescript-eslint/member-delimiter-style':
    [
      'error',
      {
        multiline: { delimiter: 'semi', requireLast: true },
        singleline: { delimiter: 'semi', requireLast: false },
      },
    ]
